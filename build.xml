<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id$ -->

<project default="main" basedir="../.." name="JBossWS-SunRI-JBoss50">
  
  <import file="${basedir}/build/ant-import/build-setup.xml"/>
  
  <import file="${int.xfire.dir}/ant-import/build-bin-dist.xml"/>
  <import file="${int.xfire.dir}/ant-import/build-deploy.xml"/>
  <import file="${int.xfire.dir}/ant-import/build-release.xml"/>
  <import file="${int.xfire.dir}/ant-import/build-testsuite.xml"/>
  <import file="${int.xfire.dir}/ant-import/build-thirdparty.xml"/>
  
  <!-- ================================================================== -->
  <!-- Setup                                                              -->
  <!-- ================================================================== -->
  
  <property name="xfire.dir" value="${int.xfire.dir}"/>
  <property name="xfire.src.dir" value="${xfire.dir}/src/main"/>
  <property name="xfire.etc.dir" value="${xfire.src.dir}/etc"/>
  <property name="xfire.java.dir" value="${xfire.src.dir}/java"/>
  <property name="xfire.resources.dir" value="${xfire.src.dir}/resources"/>
  <property name="xfire.output.dir" value="${xfire.dir}/output"/>
  <property name="xfire.output.apidocs.dir" value="${xfire.output.dir}/apidocs"/>
  <property name="xfire.output.classes.dir" value="${xfire.output.dir}/classes"/>
  <property name="xfire.output.etc.dir" value="${xfire.output.dir}/etc"/>
  <property name="xfire.output.lib.dir" value="${xfire.output.dir}/lib"/>
	
  <!-- ================================================================== -->
  <!-- Initialization                                                     -->
  <!-- ================================================================== -->
  
  <target name="init" depends="prepare,thirdparty">
    <ant antfile="${spi.dir}/build.xml" target="jars" inheritall="false"/>
  </target>
  
  <!-- ================================================================== -->
  <!-- Compile                                                            -->
  <!-- ================================================================== -->
  
  <!--
  | Compile everything.
  |
  | This target should depend on other compile-* targets for each
  | different type of compile that needs to be performed, short of
  | documentation compiles.
  -->
  
  <target name="compile" depends="init,compile-classes,compile-etc" description="Compile all source files."/>
  
  <!-- Compile java sources -->
  <target name="compile-classes" depends="compile-classes-xfire"/>
  <target name="compile-classes-xfire" depends="init">
    <mkdir dir="${xfire.output.classes.dir}"/>
    <javac srcdir="${xfire.java.dir}" sourcepath="" destdir="${xfire.output.classes.dir}" encoding="utf-8" debug="${javac.debug}" verbose="${javac.verbose}"
      deprecation="${javac.deprecation}" failonerror="${javac.fail.onerror}">
      <include name="org/jboss/wsf/stack/xfire/**"/>
      <classpath refid="xfire.integration.classpath"/>
    </javac>
  </target>
  
  <!-- Compile etc files (manifests and such) -->
  <target name="compile-etc" depends="init">
    <mkdir dir="${xfire.output.etc.dir}"/>
    <copy todir="${xfire.output.etc.dir}" filtering="yes">
      <fileset dir="${xfire.etc.dir}">
        <include name="component-info.xml"/>
  	  </fileset>
      <fileset dir="${build.dir}/etc">
        <include name="default.mf"/>
  	  </fileset>
      <filterset>
        <filter token="java.vm.version" value="${java.vm.version}"/>
        <filter token="java.vm.vendor" value="${java.vm.vendor}"/>
        <filter token="build.id" value="${build.id}"/>
        <filter token="implementation.version" value="jbossws-xfire-${version.id}"/>
        <filtersfile file="${build.dir}/version.properties"/>
        <filtersfile file="${int.xfire.dir}/version.properties"/>
      </filterset>
    </copy>
  </target>
  
  <!-- ================================================================== -->
  <!-- Archives                                                           -->
  <!-- ================================================================== -->
  
  <!--
  | Build all jar files.
  -->
  <target name="jars" depends="compile,jars-jboss42,jars-jboss50" description="Builds all jar files.">
  </target>
  
  <target name="jars-common" depends="compile">
    
    <!-- Build jbossws-xfire.jar -->
    <mkdir dir="${xfire.output.lib.dir}"/>
    <jar jarfile="${xfire.output.lib.dir}/jbossws-xfire.jar" manifest="${xfire.output.etc.dir}/default.mf">
      <fileset dir="${xfire.output.classes.dir}">
        <include name="org/jboss/wsf/stack/xfire/**"/>
      </fileset>
    </jar>
    
    <!-- Build jbossws-context.war -->
    <war warfile="${xfire.output.lib.dir}/jbossws-context.war" webxml="${xfire.resources.dir}/jbossws-context.war/WEB-INF/web.xml">
      <fileset dir="${xfire.resources.dir}/jbossws-context.war">
        <include name="index.html"/>
        <include name="styles.css"/>
      </fileset>
      <webinf dir="${xfire.resources.dir}/jbossws-context.war/WEB-INF">
        <include name="jboss-web.xml"/>
      </webinf>
    </war>
    
    <!-- Build jbossws-xfire-src.zip -->
    <zip zipfile="${xfire.output.lib.dir}/jbossws-xfire-src.zip" >
      <fileset dir="${xfire.java.dir}"/>
    </zip>
  </target>
  
  <target name="jars-jboss50" depends="jars-common" if="jboss50.home">
    
    <ant antfile="${int.jboss50.dir}/build.xml" target="jars" inheritall="false"/>
    
    <!-- Concat jbossws-beans.xml -->
    <concat destfile="${xfire.output.lib.dir}/jbossws-xfire50/jbossws-beans.xml">
      <header trimleading="yes">
        &lt;deployment xmlns="urn:jboss:bean-deployer:2.0"&gt;
      </header>
      <fileset file="${xfire.resources.dir}/jbossws-xfire-config.xml"/>
      <footer trimleading="yes">
        &lt;/deployment&gt;
      </footer>
    </concat>
    
    <!-- Build jbosswsri.sar -->
    <jar jarfile="${xfire.output.lib.dir}/jbossws-xfire50.sar" manifest="${xfire.output.etc.dir}/default.mf">
      <!-- [JBAS-4379] MC beans deployed twice because of jacc service
      <fileset dir="${xfire.output.lib.dir}">
      <include name="jbossws-context.war"/>
      </fileset>
      -->
      <fileset dir="${spi.dir}/thirdparty">
        <include name="jaxrpc-api.jar"/>
      </fileset>
      <fileset dir="${thirdparty.dir}">
        <include name="jaxws-api.jar"/>
        <include name="jdom.jar"/>
        <include name="wsdl4j.jar"/>
        <include name="saaj-api.jar"/>
        <include name="saaj-impl.jar"/>
        <include name="spring.jar"/>
        <include name="xbean.jar"/>
        <include name="xbean-spring.jar"/>
        <include name="xfire-all.jar"/>
        <include name="xfire-jsr181-api.jar"/>
      </fileset>
      <fileset dir="${xfire.output.lib.dir}">
        <include name="jbossws-xfire.jar"/>
      </fileset>
      <metainf dir="${xfire.output.lib.dir}/jbossws-xfire50">
        <include name="jbossws-beans.xml"/>
      </metainf>
    </jar>
    
   </target>
  
  <target name="jars-jboss42" depends="jars-common" if="jboss42.home">
    
    <ant antfile="${int.jboss42.dir}/build.xml" target="jars" inheritall="false"/>
    
    <!-- Concat jboss-beans.xml -->
    <concat destfile="${xfire.output.lib.dir}/jbossws-xfire42/jbossws.beans/META-INF/jboss-beans.xml">
      <header trimleading="yes">
        &lt;deployment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:jboss:bean-deployer bean-deployer_1_0.xsd" xmlns="urn:jboss:bean-deployer"&gt;
      </header>
      <fileset file="${xfire.resources.dir}/jbossws-xfire-config.xml"/>
      <fileset file="${int.jboss42.dir}/src/main/resources/jbossws-jboss42-config.xml"/>
      <footer trimleading="yes">
        &lt;/deployment&gt;
      </footer>
    </concat>
    
    <!-- Build jbossws-xfire42.sar -->
    <jar jarfile="${xfire.output.lib.dir}/jbossws-xfire42.sar" manifest="${xfire.output.etc.dir}/default.mf">
      <fileset dir="${xfire.output.lib.dir}">
        <include name="jbossws-context.war"/>
      </fileset>
      <fileset dir="${spi.dir}/thirdparty">
        <include name="jaxrpc-api.jar"/>
      </fileset>
      <fileset dir="${int.jboss42.dir}/output/lib">
        <include name="jbossws-jboss42.jar"/>
      </fileset>
      <fileset dir="${xfire.output.lib.dir}">
        <include name="jbossws-xfire.jar"/>
      </fileset>
      <fileset dir="${thirdparty.dir}">
        <include name="jaxb-api.jar"/>
        <include name="jaxb-impl.jar"/>
        <include name="jaxws-api.jar"/>
        <include name="jdom.jar"/>
        <include name="wsdl4j.jar"/>
        <include name="saaj-api.jar"/>
        <include name="saaj-impl.jar"/>
        <include name="spring.jar"/>
        <include name="stax-api.jar"/>
        <include name="wstx.jar"/>
        <include name="xbean.jar"/>
        <include name="xbean-spring.jar"/>
        <include name="xfire-all.jar"/>
        <include name="xfire-jsr181-api.jar"/>
      </fileset>
      <fileset dir="${xfire.output.lib.dir}/jbossws-xfire42">
        <include name="jbossws.beans/**"/>
      </fileset>
      <metainf dir="${int.jboss42.dir}/src/main/resources/jbossws-jboss42.sar/META-INF">
        <include name="jboss-service.xml"/>
      </metainf>
    </jar>
  </target>

	<!-- Generate the JavaDoc -->
   <target name="javadoc" depends="init" description="Generate the Javadoc">

		<mkdir dir="${xfire.output.apidocs.dir}"/>

		<!-- expand the xfire sources -->
		<mkdir dir="${xfire.output.dir}/thirdparty-sources"/>
		<unzip src="${thirdparty.dir}/xfire-distribution-sources.jar" dest="${xfire.output.dir}/thirdparty-sources"/>


		<javadoc destdir="${xfire.output.apidocs.dir}" author="true" version="true" use="true" windowtitle="JBossWS API ${version.id} ">
      <classpath>
			  <pathelement path="${xfire.integration.classpath}"/>
				<fileset dir="${spi.dir}/thirdparty">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
      <packageset dir="${xfire.java.dir}" defaultexcludes="yes">
        <include name="org/jboss/wsf/**"/>
      </packageset>
			<packageset dir="${xfire.output.dir}/thirdparty-sources" defaultexcludes="yes">
				<include name="org/codehaus/**"/>
			</packageset>
			<packageset dir="${spi.dir}/src/main/java">
				<include name="org/jboss/wsf/**"/>
				<include name="org/jboss/ws/**"/>
			</packageset>
			<packageset dir="${int.jboss50.dir}/src/main/java">
				<include name="org/jboss/wsf/**"/>
			</packageset>
			<doctitle><![CDATA[<h1>JBoss Web Service Framework  ${version.id} - Stack integration XFire</h1>]]></doctitle>
			<tag name="todo" scope="all" description="To do:"/>
			<!--group title="Native SOAP stack" packages="org.jboss.ws,org.jboss.ws.core*, org.jboss.ws.metadata*, org.jboss.ws.extensions*, org.jboss.ws.tools*, org.jboss.ws.annotation*, org.jboss.ws.jaxrpc*, org.jboss.ws.soap*"/-->
			<group title="Stack integration" packages="org.jboss.wsf.stack*"/>
			<group title="SPI" packages="org.jboss.wsf.spi*, org.jboss.ws.integration*"/>
			<group title="Container integration" packages="org.jboss.wsf.container*"/>
      <tag name="todo" scope="all" description="To do:"/>
		</javadoc>
   </target>

  <!-- ================================================================== -->
  <!-- Miscellaneous                                                       -->
  <!-- ================================================================== -->
  
  <target name="clean" depends="prepare" description="Cleans up most generated files.">
    <delete dir="${xfire.output.dir}"/>
  </target>
  
  <target name="clobber" depends="clean" description="Cleans up all generated files.">
    <delete dir="${int.xfire.dir}/thirdparty"/>
  </target>
  
  <target name="main" description="Executes the default target (most)." depends="most"/>
  
  <target name="most" description="Builds almost everything." depends="jars,tests-main"/>
  
  <target name="all" description="Create a distribution zip file" depends="most,build-bin-dist"/>
  
</project>
