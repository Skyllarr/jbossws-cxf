<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id$ -->

<project default="main" basedir="." name="JBossWS-CXF">
  
  <property name="int.cxf.dir" value="${basedir}"/>
  
  <import file="${basedir}/ant-import/build-setup.xml"/>
  <import file="${basedir}/ant-import/build-bin-dist.xml"/>
  <import file="${basedir}/ant-import/build-prepare-deploy.xml"/>
  <import file="${basedir}/ant-import/build-deploy.xml"/>
  <import file="${basedir}/ant-import/build-release.xml"/>
  <import file="${basedir}/ant-import/build-testsuite.xml"/>
  <import file="${basedir}/ant-import/build-thirdparty.xml"/>
  <import file="${basedir}/ant-import/jbossws-deploy-macros.xml"/>
  
  <!-- ================================================================== -->
  <!-- Setup                                                              -->
  <!-- ================================================================== -->
  
  <property name="cxf.dir" value="${int.cxf.dir}"/>
  <property name="cxf.src.dir" value="${cxf.dir}/src/main"/>
  <property name="cxf.etc.dir" value="${cxf.src.dir}/etc"/>
  <property name="cxf.distro.dir" value="${cxf.src.dir}/distro"/>
  <property name="cxf.java.dir" value="${cxf.src.dir}/java"/>
  <property name="cxf.resources.dir" value="${cxf.src.dir}/resources"/>
  <property name="cxf.output.dir" value="${cxf.dir}/output"/>
  <property name="cxf.output.apidocs.dir" value="${cxf.output.dir}/apidocs"/>
  <property name="cxf.output.classes.dir" value="${cxf.output.dir}/classes"/>
  <property name="cxf.output.deploy.dir" value="${cxf.output.dir}/deploy"/>
  <property name="cxf.output.etc.dir" value="${cxf.output.dir}/etc"/>
  <property name="cxf.output.lib.dir" value="${cxf.output.dir}/lib"/>
  <property name="cxf.output.resources.dir" value="${cxf.output.dir}/resources"/>
  
  <property name="deploy.artifacts.dir" value="${cxf.output.deploy.dir}-artifacts"/>
  <property name="deploy.structure.jboss42" value="${cxf.output.deploy.dir}-jboss42"/>
  <property name="deploy.structure.jboss50" value="${cxf.output.deploy.dir}-jboss50"/>
	<property name="jbossws.default.deploy.conf" value="${cxf.dir}/ant-import/jbossws-default-deploy.conf"/>
	
  <!-- ================================================================== -->
  <!-- Initialization                                                     -->
  <!-- ================================================================== -->
  
  <target name="init" depends="prepare,thirdparty">
		<mkdir dir="${cxf.output.apidocs.dir}"/>
  </target>
  
  <!-- ================================================================== -->
  <!-- Compile                                                            -->
  <!-- ================================================================== -->
  
  <!--
  | Compile everything.
  |
  | This target should depend on other compile-* targets for each
  | different type of compile that needs to be performed, short of
  | documentation compiles.
  -->
  
  <target name="compile" depends="init,compile-classes,compile-etc,compile-resources" description="Compile all source files."/>
  
  <!-- Compile java sources -->
  <target name="compile-classes" depends="compile-classes-cxf"/>
  <target name="compile-classes-cxf" depends="init">
    <mkdir dir="${cxf.output.classes.dir}"/>
    <javac srcdir="${cxf.java.dir}" sourcepath="" destdir="${cxf.output.classes.dir}" encoding="utf-8" debug="${javac.debug}" verbose="${javac.verbose}"
      deprecation="${javac.deprecation}" failonerror="${javac.fail.onerror}">
      <include name="org/jboss/wsf/stack/cxf/**"/>
      <classpath refid="cxf.integration.classpath"/>
    </javac>
  </target>
  
  <!-- Compile etc files (manifests and such) -->
  <target name="compile-etc" depends="init">
    <mkdir dir="${cxf.output.etc.dir}"/>
    <copy todir="${cxf.output.etc.dir}" filtering="yes" overwrite="true">
      <fileset dir="${cxf.etc.dir}">
        <include name="component-info.xml"/>
        <include name="default.mf"/>
  	  </fileset>
      <filterset>
        <filter token="java.vm.version" value="${java.vm.version}"/>
        <filter token="java.vm.vendor" value="${java.vm.vendor}"/>
        <filter token="build.id" value="${build.id}"/>
        <filter token="implementation.version" value="jbossws-${version.id}"/>
        <filtersfile file="${int.cxf.dir}/version.properties"/>
      </filterset>
    </copy>
  </target>
  
  <!-- Compile resource files -->
  <target name="compile-resources" depends="init">
    
    <!-- Concat jbossws-cxf50-beans.xml -->
    <mkdir dir="${cxf.output.resources.dir}"/>
    <concat destfile="${cxf.output.resources.dir}/jbossws-cxf50-beans.xml">
      <header trimleading="yes">
        &lt;deployment xmlns="urn:jboss:bean-deployer:2.0"&gt;
      </header>
      <fileset file="${cxf.resources.dir}/jbossws-cxf-config.xml"/>
      <footer trimleading="yes">
        &lt;/deployment&gt;
      </footer>
    </concat>
    
    <!-- Concat jboss-beans.xml -->
    <unzip dest="${cxf.output.dir}/resources" src="${thirdparty.dir}/jbossws-jboss42-resources.zip"/>
    <concat destfile="${cxf.output.resources.dir}/jbossws-cxf42-beans.xml">
      <header trimleading="yes">
        &lt;deployment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:jboss:bean-deployer bean-deployer_1_0.xsd" xmlns="urn:jboss:bean-deployer"&gt;
      </header>
      <fileset file="${cxf.resources.dir}/jbossws-cxf-config.xml"/>
      <fileset file="${cxf.output.resources.dir}/jbossws-jboss42-config.xml"/>
      <footer trimleading="yes">
        &lt;/deployment&gt;
      </footer>
    </concat>
    
    <copy todir="${cxf.output.resources.dir}">
      <fileset dir="${cxf.resources.dir}">
        <include name="jbossws-cxf.jar/**"/>
        <include name="jbossws-cxf.sar/**"/>
      </fileset>
    </copy>
  </target>

  <!-- ================================================================== -->
  <!-- Archives                                                           -->
  <!-- ================================================================== -->
  
  <!--
  | Build all jar files.
  -->
  <target name="jars" depends="compile" description="Builds all jar files.">
    
    <!-- Build jbossws-cxf.jar -->
    <mkdir dir="${cxf.output.lib.dir}"/>
    <jar jarfile="${cxf.output.lib.dir}/jbossws-cxf.jar" manifest="${cxf.output.etc.dir}/default.mf">
      <fileset dir="${cxf.output.classes.dir}">
        <include name="org/jboss/wsf/stack/cxf/**"/>
      </fileset>
      <metainf dir="${cxf.resources.dir}/jbossws-cxf.jar/META-INF"/>
    </jar>
    
    <jar jarfile="${cxf.output.lib.dir}/jbossws-cxf-client.jar" manifest="${cxf.output.etc.dir}/default.mf">
      <fileset dir="${cxf.output.classes.dir}">
        <include name="org/jboss/wsf/stack/cxf/client/**"/>
      </fileset>
    </jar>
    
     <!-- Build jbossws-context.war -->
     <copy todir="${cxf.output.lib.dir}/jbossws-context.war" filtering="true">
        <fileset dir="${cxf.resources.dir}/jbossws-context.war">
           <include name="index.html"/>
           <include name="styles.css"/>
           <include name="WEB-INF/**"/>
        </fileset>
        <filterset>
           <filter token="build.id" value="${build.id}"/>
           <filter token="implementation.version" value="jbossws-${version.id}"/>
           <filtersfile file="${cxf.dir}/version.properties"/>
        </filterset>
     </copy>
    
    <!-- Remove config files from cxf-${cxf.version}.jar -->
    <unjar src="${thirdparty.dir}/cxf-${cxf.version}.jar" dest="${cxf.output.lib.dir}/cxf-${cxf.version}"/>
    <jar destfile="${cxf.output.lib.dir}/cxf-${cxf.version}.jar">
      <fileset dir="${cxf.output.lib.dir}/cxf-${cxf.version}">
        <exclude name="META-INF/**"/>
      </fileset>
    </jar>
    
    <!-- Build jbossws-cxf-src.zip -->
    <zip zipfile="${cxf.output.lib.dir}/jbossws-cxf-src.zip" >
      <fileset dir="${cxf.java.dir}"/>
    </zip>
  </target>
  
	<!-- Generate the JavaDoc -->
  <target name="javadoc" depends="init" description="Generate the Javadoc" if="javadoc">

		<!-- expand the cxf sources -->
		<mkdir dir="${cxf.output.dir}/thirdparty-sources"/>
		<unzip src="${thirdparty.dir}/cxf-distribution-sources.jar" dest="${cxf.output.dir}/thirdparty-sources"/>


		<javadoc destdir="${cxf.output.apidocs.dir}" author="true" version="true" use="true" windowtitle="JBossWS API ${version.id} ">
      <classpath>
			  <pathelement path="${cxf.integration.classpath}"/>
			</classpath>
      <packageset dir="${cxf.java.dir}" defaultexcludes="yes">
        <include name="org/jboss/wsf/**"/>
      </packageset>
			<packageset dir="${cxf.output.dir}/thirdparty-sources" defaultexcludes="yes">
				<include name="org/codehaus/**"/>
			</packageset>
			<doctitle><![CDATA[<h1>JBoss Web Service Framework  ${version.id} - Stack integration CXF</h1>]]></doctitle>
			<tag name="todo" scope="all" description="To do:"/>
			<!--group title="Native SOAP stack" packages="org.jboss.ws,org.jboss.ws.core*, org.jboss.ws.metadata*, org.jboss.ws.extensions*, org.jboss.ws.tools*, org.jboss.ws.annotation*, org.jboss.ws.jaxrpc*, org.jboss.ws.soap*"/-->
			<group title="Stack integration" packages="org.jboss.wsf.stack*"/>
			<group title="SPI" packages="org.jboss.wsf.spi*, org.jboss.ws.integration*"/>
			<group title="Container integration" packages="org.jboss.wsf.container*"/>
      <tag name="todo" scope="all" description="To do:"/>
		</javadoc>
   </target>

  <!-- ================================================================== -->
  <!-- Miscellaneous                                                       -->
  <!-- ================================================================== -->
  
  <target name="clean" depends="prepare" description="Cleans up most generated files.">
    <delete dir="${cxf.output.dir}"/>
  </target>
  
  <target name="clobber" depends="clean" description="Cleans up all generated files.">
    <delete dir="${int.cxf.dir}/thirdparty"/>
  </target>
  
  <target name="main" description="Executes the default target (most)." depends="most"/>
  
  <target name="most" description="Builds almost everything." depends="jars,tests-main"/>
  
  <target name="all" description="Create a distribution zip file" depends="most,build-bin-dist"/>
  
</project>
