<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id$ -->

<project>

  <property file="${int.cxf.dir}/version.properties"/>
  
  <!-- ========= -->
  <!-- Libraries -->
  <!-- ========= -->

  <target name="thirdparty" depends="thirdparty-classpath">
  </target>
  
  <target name="thirdparty-init" depends="prepare">
    
    <property name="apache.cxf.dir" value="${cxf.dir}/apache-cxf"/>
    <available property="apache.cxf.available" file="${apache.cxf.dir}"/>
    
    <property name="thirdparty.dir" value="${int.cxf.dir}/thirdparty"/>
    <checksum file="${int.cxf.dir}/version.properties" fileext=".md5" verifyproperty="checksum.ok"/>
    <condition property="force.thirdparty.get">
      <or>
        <not>
          <available file="${thirdparty.dir}" type="dir"/>
        </not>
        <isfalse value="${checksum.ok}"/>
      </or>
    </condition>
  </target>
  
  <!-- 
    thirdpartry-get
  -->
  <target name="thirdparty-get" depends="thirdparty-init, cxf-copy-jars" if="force.thirdparty.get" 
    description="Gets the thirdparty libraries">

    <mkdir dir="${thirdparty.dir}"/>
    <get src="${jboss.repository}/jboss/jbossws-common/${jbossws-common}/lib/jbossws-common.jar" dest="${thirdparty.dir}/jbossws-common.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/jboss/jbossws-framework/${jbossws-framework}/lib/jbossws-framework.jar" dest="${thirdparty.dir}/jbossws-framework.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/jboss/jbossws-framework/${jbossws-framework}/lib/jbossws-framework-scripts.zip" dest="${thirdparty.dir}/jbossws-framework-scripts.zip" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/jboss/jbossws-spi/${jbossws-spi}/lib/jbossws-spi.jar" dest="${thirdparty.dir}/jbossws-spi.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/jboss/jbossws-jboss42/${jbossws-jboss42}/lib/jbossws-jboss42-resources.zip" dest="${thirdparty.dir}/jbossws-jboss42-resources.zip" usetimestamp="true" verbose="true"/>
    
    <get src="${jboss.repository}/apache-xml-commons/${apache-xml-commons}/lib/resolver.jar" dest="${thirdparty.dir}/resolver.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/ibm-wsdl4j/${ibm-wsdl4j}/lib/wsdl4j.jar" dest="${thirdparty.dir}/wsdl4j.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/ibm-wsdl4j/${ibm-wsdl4j}/lib/wsdl4j-src.jar" dest="${thirdparty.dir}/wsdl4j-src.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/jboss/common-core/${jboss-common-core}/lib/jboss-common-core.jar" dest="${thirdparty.dir}/jboss-common-core.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/jboss/common-core/${jboss-common-core}/lib/jboss-common-core-sources.jar" dest="${thirdparty.dir}/jboss-common-core-sources.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/jboss/common-logging-spi/${jboss-common-logging-spi}/lib/jboss-logging-spi.jar" dest="${thirdparty.dir}/jboss-logging-spi.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/jboss/jaxr/${jboss-jaxr}/lib/juddi-service.sar" dest="${thirdparty.dir}/juddi-service.sar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/jboss/jboss-javaee/${jboss-javaee}/lib/jboss-javaee.jar" dest="${thirdparty.dir}/jboss-javaee.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/stax-api/${stax-api}/lib/stax-api.jar" dest="${thirdparty.dir}/stax-api.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/sun-jaxb/${sun-jaxb}/lib/jaxb-api.jar" dest="${thirdparty.dir}/jaxb-api.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/sun-jaxb/${sun-jaxb}/lib/jaxb-impl.jar" dest="${thirdparty.dir}/jaxb-impl.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/sun-jaxb/${sun-jaxb}/lib/jaxb-xjc.jar" dest="${thirdparty.dir}/jaxb-xjc.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/sun-servlet/${sun-servlet}/lib/servlet-api.jar" dest="${thirdparty.dir}/servlet-api.jar" usetimestamp="true" verbose="true"/>
    <get src="${jboss.repository}/woodstox/${woodstox}/lib/wstx.jar" dest="${thirdparty.dir}/wstx.jar" usetimestamp="true" verbose="true"/>
    
    <checksum file="${int.cxf.dir}/version.properties" fileext=".md5"/>
  </target>
  
  <target name="thirdparty-classpath" depends="thirdparty-get">
    <path id="cxf.integration.classpath">
        <!-- A stack MUST NOT have a compile time dependency on jbossws-framework.jar -->
      <pathelement location="${thirdparty.dir}/jbossws-common.jar"/>
      <pathelement location="${thirdparty.dir}/jbossws-spi.jar"/>
      
      <pathelement location="${thirdparty.dir}/cxf-${cxf.version}.jar"/>
      <pathelement location="${thirdparty.dir}/jaxws-api-${cxf.jaxws.api}.jar"/>
      <pathelement location="${thirdparty.dir}/spring-beans-${cxf.spring}.jar"/>
      <pathelement location="${thirdparty.dir}/spring-context-${cxf.spring}.jar"/>
      <pathelement location="${thirdparty.dir}/spring-core-${cxf.spring}.jar"/>
      
      <pathelement location="${thirdparty.dir}/jaxb-api.jar"/>
      <pathelement location="${thirdparty.dir}/jboss-common-core.jar"/>
      <pathelement location="${thirdparty.dir}/jboss-javaee.jar"/>
      <pathelement location="${thirdparty.dir}/jboss-logging-spi.jar"/>
      <pathelement location="${thirdparty.dir}/servlet-api.jar"/>
    </path>
  </target>

  <!-- Build CXF from source -->
  <target name="cxf-build" depends="cxf-copy-jars" description="Build Apache CXF from source">
  </target>
  
  <!-- SVN checkout the Apache CXF sources -->
  <target name="cxf-checkout-dir" depends="thirdparty-init" unless="apache.cxf.available">
    <property name="cxf.checkout.required" value="true"/>
    <echo message="cxf.checkout.required=${cxf.checkout.required}"/>
  </target>
  
  <target name="cxf-checkout-required" depends="cxf-checkout-dir" if="apache.cxf.available">
    <exec dir="${apache.cxf.dir}" executable="svn" failonerror="true" output="${apache.cxf.dir}/svn-info.xml">
      <arg line="info"/>
      <arg line="--xml"/>
    </exec>
    <xmlproperty file="${apache.cxf.dir}/svn-info.xml"/>
    <property name="cxf.entry.url" value="${info.entry.url}"/>
    <condition property="cxf.checkout.required">
      <not>
        <equals arg1="${cxf.entry.url}" arg2="${cxf.svn.url}"/>
      </not>
    </condition>
    <echo message="cxf.checkout.required=${cxf.checkout.required}"/>
  </target>
  
  <target name="cxf-checkout" depends="cxf-checkout-required" if="cxf.checkout.required">
    <delete dir="${apache.cxf.dir}"/>
    <exec dir="${cxf.dir}" executable="svn" failonerror="true">
      <arg value="checkout"/>
      <arg value="-r${cxf.svn.rev}"/>
      <arg value="${cxf.svn.url}"/>
      <arg value="apache-cxf"/>
    </exec>
  </target>
  
  <!-- SVN update the Apache CXF sources -->
  <target name="cxf-update-required" depends="thirdparty-init" if="apache.cxf.available">
    <exec dir="${apache.cxf.dir}" executable="svn" failonerror="true" output="${apache.cxf.dir}/svn-info.xml">
      <arg line="info"/>
      <arg line="--xml"/>
    </exec>
    <xmlproperty file="${apache.cxf.dir}/svn-info.xml"/>
    <property name="cxf.entry.url" value="${info.entry.url}"/>
    <condition property="cxf.update.required">
      <equals arg1="${cxf.entry.url}" arg2="${cxf.svn.url}"/>
    </condition>
    <echo message="cxf.update.required=${cxf.update.required}"/>
  </target>
  
  <target name="cxf-update" depends="cxf-update-required" if="cxf.update.required">
    <exec dir="${apache.cxf.dir}" executable="svn" failonerror="true">
      <arg value="update"/>
      <arg value="-r${cxf.svn.rev}"/>
    </exec>
  </target>

  <!-- SVN get commit revision -->
  <target name="cxf-svn-info" depends="cxf-update,cxf-checkout">
    <exec dir="${apache.cxf.dir}" executable="svn" failonerror="true" output="${apache.cxf.dir}/svn-info.xml">
      <arg line="info"/>
      <arg line="--xml"/>
    </exec>
    <xmlproperty file="${apache.cxf.dir}/svn-info.xml"/>
    <property name="cxf.entry.commit.revision" value="${info.entry.commit(revision)}"/>
    <available property="cxf.build.available" file="${apache.cxf.dir}/build-${cxf.entry.commit.revision}.rev"/>
  </target>
  
  <!-- Build using maven -->
  <target name="cxf-maven-build" depends="cxf-svn-info" unless="cxf.build.available">
    <exec dir="${apache.cxf.dir}" executable="mvn" failonerror="true">
      <arg value="clean"/>
      <arg value="install"/>
      <arg value="-Pfastinstall,everything"/>
    </exec>
    <exec dir="${apache.cxf.dir}" executable="svn" failonerror="true" output="${apache.cxf.dir}/svn-info.xml">
      <arg line="info"/>
      <arg line="--xml"/>
    </exec>
    <touch file="${apache.cxf.dir}/build-${cxf.entry.commit.revision}.rev"/>
  </target>
  
  <!-- Copy the cxf jars -->
  <target name="cxf-copy-jars" depends="cxf-maven-build">
    <mkdir dir="${thirdparty.dir}"/>
    
    <property name="cxf.distribution.lib" value="${apache.cxf.dir}/distribution/target/apache-cxf-${cxf.version}.dir/apache-cxf-${cxf.version}/lib"/>
    
    <available property="cxf.available" filepath="${cxf.distribution.lib}" file="cxf-${cxf.version}.jar"/>
    <available property="geronimo-javamail.available" filepath="${cxf.distribution.lib}" file="geronimo-javamail_${cxf.geronimo.javamail}.jar"/>
    <available property="geronimo-ws-metadata.available" filepath="${cxf.distribution.lib}" file="geronimo-ws-metadata_${cxf.geronimo.ws.metadata}.jar"/>
    <available property="jaxws-api.available" filepath="${cxf.distribution.lib}" file="jaxws-api-${cxf.jaxws.api}.jar"/>
    <available property="jdom.available" filepath="${cxf.distribution.lib}" file="jdom-${cxf.jdom}.jar"/>
    <available property="neethi.available" filepath="${cxf.distribution.lib}" file="neethi-${cxf.neethi}.jar"/>
    <available property="saaj-api.available" filepath="${cxf.distribution.lib}" file="saaj-api-${cxf.saaj}.jar"/>
    <available property="saaj-impl.available" filepath="${cxf.distribution.lib}" file="saaj-impl-${cxf.saaj}.jar"/>
    <available property="spring-beans.available" filepath="${cxf.distribution.lib}" file="spring-beans-${cxf.spring}.jar"/>
    <available property="spring-context.available" filepath="${cxf.distribution.lib}" file="spring-context-${cxf.spring}.jar"/>
    <available property="spring-core.available" filepath="${cxf.distribution.lib}" file="spring-core-${cxf.spring}.jar"/>
    <available property="xbean.available" filepath="${cxf.distribution.lib}" file="xbean-${cxf.xbean}.jar"/>
    <available property="xml-resolver.available" filepath="${cxf.distribution.lib}" file="xml-resolver-${cxf.xml.resolver}.jar"/>
    <available property="XmlSchema.available" filepath="${cxf.distribution.lib}" file="XmlSchema-${cxf.xmlschema}.jar"/>
    
    <fail message="cxf-${cxf.version}.jar not available" unless="cxf.available"/>
    <fail message="geronimo-javamail_${cxf.geronimo.javamail}.jar not available" unless="geronimo-javamail.available"/>
    <fail message="geronimo-ws-metadata_${cxf.geronimo.ws.metadata}.jar not available" unless="geronimo-ws-metadata.available"/>
    <fail message="jaxws-api-${cxf.jaxws.api}.jar not available" unless="jaxws-api.available"/>
    <fail message="jdom-${cxf.jdom}.jar not available" unless="jdom.available"/>
    <fail message="neethi-${cxf.neethi}.jar not available" unless="neethi.available"/>
    <fail message="saaj-api-${cxf.saaj}.jar not available" unless="saaj-api.available"/>
    <fail message="saaj-impl-${cxf.saaj}.jar not available" unless="saaj-impl.available"/>
    <fail message="spring-beans-${cxf.spring}.jar not available" unless="spring-beans.available"/>
    <fail message="spring-context-${cxf.spring}.jar not available" unless="spring-context.available"/>
    <fail message="spring-core-${cxf.spring}.jar not available" unless="spring-core.available"/>
    <fail message="xbean-${cxf.xbean}.jar not available" unless="xbean.available"/>
    <fail message="xml-resolver-${cxf.xml.resolver}.jar not available" unless="xml-resolver.available"/>
    <fail message="XmlSchema-${cxf.xmlschema}.jar not available" unless="XmlSchema.available"/>
    
    <copy todir="${thirdparty.dir}">
      <fileset dir="${cxf.distribution.lib}">
        <include name="cxf-${cxf.version}.jar"/>
        <include name="geronimo-javamail_${cxf.geronimo.javamail}.jar"/>
        <include name="geronimo-ws-metadata_${cxf.geronimo.ws.metadata}.jar"/>
        <include name="jaxws-api-${cxf.jaxws.api}.jar"/>
        <include name="jdom-${cxf.jdom}.jar"/>
        <include name="neethi-${cxf.neethi}.jar"/>
        <include name="saaj-api-${cxf.saaj}.jar"/>
        <include name="saaj-impl-${cxf.saaj}.jar"/>
        <include name="spring-beans-${cxf.spring}.jar"/>
        <include name="spring-context-${cxf.spring}.jar"/>
        <include name="spring-core-${cxf.spring}.jar"/>
        <include name="xbean-${cxf.xbean}.jar"/>
        <include name="xml-resolver-${cxf.xml.resolver}.jar"/>
        <include name="XmlSchema-${cxf.xmlschema}.jar"/>
      </fileset>
    </copy>
  </target>
  
</project>
